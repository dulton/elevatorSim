## elevatorSim makefile
## license: see LICENSE file
## arch:     x86
## os:       winnt
## compiler: msvc2010

DBG_OBJDIR=.\debug

DBG_CLIENT_OBJ=\
$(DBG_OBJDIR)\ElevatorSim.obj

DBG_SIM_OBJS=\
$(DBG_OBJDIR)\ElevatorSimWindow.obj\
$(DBG_OBJDIR)\ElevatorSimRenderWindow.obj\
$(DBG_OBJDIR)\ElevatorSimWelcomeWindow.obj\
$(DBG_OBJDIR)\ElevatorSimStartWindow.obj\
$(DBG_OBJDIR)\ElevatorSimResultsWindow.obj\
$(DBG_OBJDIR)\cRenderObjs.obj\
$(DBG_OBJDIR)\cTimeManager.obj\
$(DBG_OBJDIR)\cKeyManager.obj\
$(DBG_OBJDIR)\cCameraManager.obj\
$(DBG_OBJDIR)\Elevator.obj\
$(DBG_OBJDIR)\Location.obj\
$(DBG_OBJDIR)\Person.obj\
$(DBG_OBJDIR)\Building.obj\
$(DBG_OBJDIR)\Floor.obj\
$(DBG_OBJDIR)\ISimulationTerminal.obj\
$(DBG_OBJDIR)\IStateObject.obj\
$(DBG_OBJDIR)\IPersonCarrier.obj\
$(DBG_OBJDIR)\Logger.obj\
$(DBG_OBJDIR)\SimulationState.obj

DBG_UNIT_TEST_OBJS=\
$(DBG_OBJDIR)\UnitTests.obj\
$(DBG_OBJDIR)\ElevatorUnitTests.obj\
$(DBG_OBJDIR)\FloorUnitTests.obj\
$(DBG_OBJDIR)\PersonUnitTests.obj\
$(DBG_OBJDIR)\BuildingIntegrationTests.obj

DBG_OBJS=$(DBG_CLIENT_OBJ) $(DBG_SIM_OBJS)

DRIVERFLAGS=/errorreport:none /nologo

# /analyze:WX- you can add this if you've got premium or better
# (not enabled on express)
CXXFLAGS=/W4 /EHac /c /D_ES_WINNT /Iinc /Iinc\Python

DEBUGFLAGS=/ZI /MDd

RELEASEFLAGS=/Og /Ox /MD /DNDEBUG

LINKFLAGS=/subsystem:windows\
/libpath:deps\x86.winnt.msvc10\boost\
/libpath:deps\x86.winnt.msvc10\fltk\
/libpath:deps\x86.winnt.msvc10\python\
/nodefaultlib:"libcd"\
/nodefaultlib:"libcmt"\
/dynamicbase\
/machine:X86

SYSDEPS=\
"comctl32.lib"\
"kernel32.lib"\
"user32.lib"\
"gdi32.lib"\
"winspool.lib"\
"comdlg32.lib"\
"advapi32.lib"\
"shell32.lib"\
"ole32.lib"\
"oleaut32.lib"\
"uuid.lib"\
"odbc32.lib"\
"odbccp32.lib"\
"glu32.lib"\
"opengl32.lib"

DBG_COOKEDDEPS=\
"fltkd.lib"\
"fltkformsd.lib"\
"fltkgld.lib"\
"fltkimagesd.lib"\
"fltkjpegd.lib"\
"fltkpngd.lib"\
"fltkzlibd.lib"\
"libboost_program_options-vc100-mt-gd-1_52.lib"\
"libboost_thread-vc100-mt-gd-1_52.lib"\
"libboost_chrono-vc100-mt-gd-1_52.lib"\
"libboost_system-vc100-mt-gd-1_52.lib"\
"python33_d.lib"

RELEASE_COOKEDDEPS=
# TODO

DBG_UNIT_TEST_OUT=elevatorSimTests_d.exe
DBG_OUT=elevatorSim_d.exe
DBG_MAPFILE=elevatorSim_d.map
DBG_PDBFILE=elevatorSim_d.pdb

RESFILE=elevatorSim.res
RCFILE=elevatorSim.rc

debug: $(DBG_OUT)

$(DBG_OUT): $(DBG_OBJS) $(RESFILE) $(DBG_UNIT_TEST_OUT) makefile.x86.winnt.msvc2010
	cl\
$(DBG_OBJS)\
$(DEBUGFLAGS)\
$(DRIVERFLAGS)\
/Fd$(DBG_PDBFILE)\
/Fm$(DBG_MAPFILE)\
/Fe$(DBG_OUT)\
/link\
$(LINKFLAGS)\
$(DBG_COOKEDDEPS)\
$(SYSDEPS)\
$(RESFILE)
	@echo + main binary build success
	@echo + running unit tests
	$(UNIT_TEST_OUT)
	@echo + success

{./}.cpp{$(DBG_OBJDIR)}.obj:
	cl $(DRIVERFLAGS) $(CXXFLAGS) $(DEBUGFLAGS) $< /Fo$@

$(RESFILE): $(RCFILE)
   rc /nologo /v /r $(RCFILE)

$(DBG_UNIT_TEST_OUT): $(DBG_UNIT_TEST_OBJS) $(DBG_SIM_OBJS)
	cl\
$(DBG_UNIT_TEST_OBJS)\
$(DBG_SIM_OBJS)\
$(DEBUGFLAGS)\
$(DRIVERFLAGS)\
/Fe$(DBG_UNIT_TEST_OUT)\
/link\
$(LINKFLAGS)\
$(SYSDEPS)\
$(DBG_COOKEDDEPS)
	@echo + unit test build success

clean:
	@erase /f /q $(DBG_OBJS) $(DBG_OUT) $(DBG_UNIT_TEST_OUT) $(DBG_UNIT_TEST_OBJS) $(DBG_MAPFILE) $(DBG_PDBFILE) $(RESFILE)
	@echo + clean
